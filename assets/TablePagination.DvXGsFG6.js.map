{"version":3,"file":"TablePagination.DvXGsFG6.js","sources":["../../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../../node_modules/@mui/material/internal/svg-icons/LastPage.js","../../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../../node_modules/@mui/material/TablePagination/TablePagination.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"backIconButtonProps\", \"count\", \"disabled\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport IconButton from '../IconButton';\nimport LastPageIconDefault from '../internal/svg-icons/LastPage';\nimport FirstPageIconDefault from '../internal/svg-icons/FirstPage';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var _slots$firstButton, _slots$lastButton, _slots$nextButton, _slots$previousButton, _slots$firstButtonIco, _slots$lastButtonIcon, _slots$nextButtonIcon, _slots$previousButton2;\n  const {\n      backIconButtonProps,\n      count,\n      disabled = false,\n      getItemAriaLabel,\n      nextIconButtonProps,\n      onPageChange,\n      page,\n      rowsPerPage,\n      showFirstButton,\n      showLastButton,\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = (_slots$firstButton = slots.firstButton) != null ? _slots$firstButton : IconButton;\n  const LastButton = (_slots$lastButton = slots.lastButton) != null ? _slots$lastButton : IconButton;\n  const NextButton = (_slots$nextButton = slots.nextButton) != null ? _slots$nextButton : IconButton;\n  const PreviousButton = (_slots$previousButton = slots.previousButton) != null ? _slots$previousButton : IconButton;\n  const FirstButtonIcon = (_slots$firstButtonIco = slots.firstButtonIcon) != null ? _slots$firstButtonIco : FirstPageIconDefault;\n  const LastButtonIcon = (_slots$lastButtonIcon = slots.lastButtonIcon) != null ? _slots$lastButtonIcon : LastPageIconDefault;\n  const NextButtonIcon = (_slots$nextButtonIcon = slots.nextButtonIcon) != null ? _slots$nextButtonIcon : KeyboardArrowRight;\n  const PreviousButtonIcon = (_slots$previousButton2 = slots.previousButtonIcon) != null ? _slots$previousButton2 : KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, _extends({\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page)\n    }, firstButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon)) : /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon))\n    })), /*#__PURE__*/_jsx(PreviousButtonSlot, _extends({\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, previousButtonSlotProps != null ? previousButtonSlotProps : backIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon)) : /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon))\n    })), /*#__PURE__*/_jsx(NextButtonSlot, _extends({\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextButtonSlotProps != null ? nextButtonSlotProps : nextIconButtonProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, _extends({}, slotProps.previousButtonIcon)) : /*#__PURE__*/_jsx(NextButtonIcon, _extends({}, slotProps.nextButtonIcon))\n    })), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, _extends({\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page)\n    }, lastButtonSlotProps, {\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, _extends({}, slotProps.firstButtonIcon)) : /*#__PURE__*/_jsx(LastButtonIcon, _extends({}, slotProps.lastButtonIcon))\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _InputBase;\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"disabled\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isHostComponent from '@mui/utils/isHostComponent';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  var _slotProps$select;\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n      ActionsComponent = TablePaginationActions,\n      backIconButtonProps,\n      className,\n      colSpan: colSpanProp,\n      component = TableCell,\n      count,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      labelDisplayedRows = defaultLabelDisplayedRows,\n      labelRowsPerPage = 'Rows per page:',\n      nextIconButtonProps,\n      onPageChange,\n      onRowsPerPageChange,\n      page,\n      rowsPerPage,\n      rowsPerPageOptions = [10, 25, 50, 100],\n      SelectProps = {},\n      showFirstButton = false,\n      showLastButton = false,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = (_slotProps$select = slotProps == null ? void 0 : slotProps.select) != null ? _slotProps$select : SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\"\n      }, !selectProps.variant && {\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n      }, {\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, selectProps, {\n        classes: _extends({}, selectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        }),\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;"],"names":["FirstPageIconDefault","createSvgIcon","_jsx","LastPageIconDefault","_excluded","TablePaginationActions","React.forwardRef","props","ref","_slots$firstButton","_slots$lastButton","_slots$nextButton","_slots$previousButton","_slots$firstButtonIco","_slots$lastButtonIcon","_slots$nextButtonIcon","_slots$previousButton2","backIconButtonProps","count","disabled","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","slots","slotProps","other","_objectWithoutPropertiesLoose","isRtl","useRtl","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","FirstButton","IconButton","LastButton","NextButton","PreviousButton","FirstButtonIcon","LastButtonIcon","NextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","_jsxs","_extends","getTablePaginationUtilityClass","slot","generateUtilityClass","tablePaginationClasses","generateUtilityClasses","_InputBase","TablePaginationRoot","styled","TableCell","styles","theme","TablePaginationToolbar","Toolbar","TablePaginationSpacer","TablePaginationSelectLabel","TablePaginationSelect","Select","TablePaginationMenuItem","MenuItem","TablePaginationDisplayedRows","defaultLabelDisplayedRows","from","to","defaultGetAriaLabel","type","useUtilityClasses","ownerState","classes","composeClasses","TablePagination","inProps","_slotProps$select","useDefaultProps","ActionsComponent","className","colSpanProp","component","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","colSpan","selectId","useId","labelId","getLabelDisplayedRowsTo","clsx","InputBase","rowsPerPageOption","_createElement","isHostComponent"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}