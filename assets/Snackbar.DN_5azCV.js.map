{"version":3,"file":"Snackbar.DN_5azCV.js","sources":["../../node_modules/@mui/material/ClickAwayListener/ClickAwayListener.js","../../node_modules/@mui/material/Snackbar/useSnackbar.js","../../node_modules/@mui/material/SnackbarContent/snackbarContentClasses.js","../../node_modules/@mui/material/SnackbarContent/SnackbarContent.js","../../node_modules/@mui/material/Snackbar/snackbarClasses.js","../../node_modules/@mui/material/Snackbar/Snackbar.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport getReactElementRef from '@mui/utils/getReactElementRef';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/material-ui/react-click-away-listener/)\n * - [Menu](https://mui.com/material-ui/react-menu/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/material-ui/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(getReactElementRef(children), nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useTimeout as useTimeout } from '@mui/utils';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\n/**\n * The basic building block for creating custom snackbar.\n *\n * Demos:\n *\n * - [Snackbar](https://mui.com/base-ui/react-snackbar/#hook)\n *\n * API:\n *\n * - [useSnackbar API](https://mui.com/base-ui/react-snackbar/hooks-api/#use-snackbar)\n */\nfunction useSnackbar(parameters = {}) {\n  const {\n    autoHideDuration = null,\n    disableWindowBlurListener = false,\n    onClose,\n    open,\n    resumeHideDuration\n  } = parameters;\n  const timerAutoHide = useTimeout();\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (!nativeEvent.defaultPrevented) {\n        // IE11, Edge (prior to using Blink?) use 'Esc'\n        if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n          // not calling `preventDefault` since we don't know if people may ignore this event e.g. a permanently open snackbar\n          onClose == null || onClose(nativeEvent, 'escapeKeyDown');\n        }\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [open, onClose]);\n  const handleClose = useEventCallback((event, reason) => {\n    onClose == null || onClose(event, reason);\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    timerAutoHide.start(autoHideDurationParam, () => {\n      handleClose(null, 'timeout');\n    });\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return timerAutoHide.clear;\n  }, [open, autoHideDuration, setAutoHideTimer, timerAutoHide]);\n  const handleClickAway = event => {\n    onClose == null || onClose(event, 'clickaway');\n  };\n\n  // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n  const handlePause = timerAutoHide.clear;\n\n  // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const createHandleBlur = otherHandlers => event => {\n    const onBlurCallback = otherHandlers.onBlur;\n    onBlurCallback == null || onBlurCallback(event);\n    handleResume();\n  };\n  const createHandleFocus = otherHandlers => event => {\n    const onFocusCallback = otherHandlers.onFocus;\n    onFocusCallback == null || onFocusCallback(event);\n    handlePause();\n  };\n  const createMouseEnter = otherHandlers => event => {\n    const onMouseEnterCallback = otherHandlers.onMouseEnter;\n    onMouseEnterCallback == null || onMouseEnterCallback(event);\n    handlePause();\n  };\n  const createMouseLeave = otherHandlers => event => {\n    const onMouseLeaveCallback = otherHandlers.onMouseLeave;\n    onMouseLeaveCallback == null || onMouseLeaveCallback(event);\n    handleResume();\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, open, handleResume, handlePause]);\n  const getRootProps = (externalProps = {}) => {\n    const externalEventHandlers = _extends({}, extractEventHandlers(parameters), extractEventHandlers(externalProps));\n    return _extends({\n      // ClickAwayListener adds an `onClick` prop which results in the alert not being announced.\n      // See https://github.com/mui/material-ui/issues/29080\n      role: 'presentation'\n    }, externalProps, externalEventHandlers, {\n      onBlur: createHandleBlur(externalEventHandlers),\n      onFocus: createHandleFocus(externalEventHandlers),\n      onMouseEnter: createMouseEnter(externalEventHandlers),\n      onMouseLeave: createMouseLeave(externalEventHandlers)\n    });\n  };\n  return {\n    getRootProps,\n    onClickAway: handleClickAway\n  };\n}\nexport default useSnackbar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarContentUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbarContent', slot);\n}\nconst snackbarContentClasses = generateUtilityClasses('MuiSnackbarContent', ['root', 'message', 'action']);\nexport default snackbarContentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"className\", \"message\", \"role\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getSnackbarContentUtilityClass } from './snackbarContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\nconst SnackbarContentRoot = styled(Paper, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return _extends({}, theme.typography.body2, {\n    color: theme.vars ? theme.vars.palette.SnackbarContent.color : theme.palette.getContrastText(backgroundColor),\n    backgroundColor: theme.vars ? theme.vars.palette.SnackbarContent.bg : backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  });\n});\nconst SnackbarContentMessage = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = styled('div', {\n  name: 'MuiSnackbarContent',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n  const {\n      action,\n      className,\n      message,\n      role = 'alert'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      ownerState: ownerState,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default SnackbarContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSnackbarUtilityClass(slot) {\n  return generateUtilityClass('MuiSnackbar', slot);\n}\nconst snackbarClasses = generateUtilityClasses('MuiSnackbar', ['root', 'anchorOriginTopCenter', 'anchorOriginBottomCenter', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft']);\nexport default snackbarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onEnter\", \"onExited\"],\n  _excluded2 = [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onBlur\", \"onClose\", \"onFocus\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useSnackbar from './useSnackbar';\nimport ClickAwayListener from '../ClickAwayListener';\nimport { styled, useTheme } from '../styles';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    anchorOrigin\n  } = ownerState;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst SnackbarRoot = styled('div', {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: (theme.vars || theme).zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, ownerState.anchorOrigin.vertical === 'top' ? {\n    top: 8\n  } : {\n    bottom: 8\n  }, ownerState.anchorOrigin.horizontal === 'left' && {\n    justifyContent: 'flex-start'\n  }, ownerState.anchorOrigin.horizontal === 'right' && {\n    justifyContent: 'flex-end'\n  }, {\n    [theme.breakpoints.up('sm')]: _extends({}, ownerState.anchorOrigin.vertical === 'top' ? {\n      top: 24\n    } : {\n      bottom: 24\n    }, ownerState.anchorOrigin.horizontal === 'center' && center, ownerState.anchorOrigin.horizontal === 'left' && {\n      left: 24,\n      right: 'auto'\n    }, ownerState.anchorOrigin.horizontal === 'right' && {\n      right: 24,\n      left: 'auto'\n    })\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      open,\n      TransitionComponent = Grow,\n      transitionDuration = defaultTransitionDuration,\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    },\n    autoHideDuration,\n    disableWindowBlurListener,\n    TransitionComponent,\n    transitionDuration\n  });\n  const classes = useUtilityClasses(ownerState);\n  const {\n    getRootProps,\n    onClickAway\n  } = useSnackbar(_extends({}, ownerState));\n  const [exited, setExited] = React.useState(true);\n  const rootProps = useSlotProps({\n    elementType: SnackbarRoot,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    ownerState,\n    additionalProps: {\n      ref\n    },\n    className: [classes.root, className]\n  });\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  // So we only render active snackbars.\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: onClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({}, rootProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/material-ui/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive snackbars using a single parent-rendered\n   * `<Snackbar/>`, add the `key` prop to ensure independent treatment of each message.\n   * For instance, use `<Snackbar key={message} />`. Otherwise, messages might update\n   * in place, and features like `autoHideDuration` could be affected.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {React.SyntheticEvent<any> | Event} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`, or `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"],"names":["mapEventPropToEvent","eventProp","clickedRootScrollbar","event","doc","ClickAwayListener","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React.useRef","nodeRef","activatedRef","syntheticEventRef","React.useEffect","handleRef","useForkRef","getReactElementRef","handleClickAway","useEventCallback","insideReactTree","ownerDocument","insideDOM","createHandleSynthetic","childrenPropsHandler","handlerName","childrenProps","mappedTouchEvent","handleTouchMove","mappedMouseEvent","_jsx","React.Fragment","React.cloneElement","useSnackbar","parameters","autoHideDuration","disableWindowBlurListener","onClose","open","resumeHideDuration","timerAutoHide","useTimeout","handleKeyDown","nativeEvent","handleClose","reason","setAutoHideTimer","autoHideDurationParam","handlePause","handleResume","React.useCallback","createHandleBlur","otherHandlers","onBlurCallback","createHandleFocus","onFocusCallback","createMouseEnter","onMouseEnterCallback","createMouseLeave","onMouseLeaveCallback","externalProps","externalEventHandlers","_extends","extractEventHandlers","getSnackbarContentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","useUtilityClasses","ownerState","classes","composeClasses","SnackbarContentRoot","styled","Paper","styles","theme","emphasis","backgroundColor","emphasize","SnackbarContentMessage","SnackbarContentAction","SnackbarContent","React.forwardRef","inProps","ref","useDefaultProps","action","className","message","role","other","_objectWithoutPropertiesLoose","_jsxs","clsx","getSnackbarUtilityClass","_excluded2","anchorOrigin","slots","capitalize","SnackbarRoot","center","Snackbar","useTheme","defaultTransitionDuration","vertical","horizontal","ClickAwayListenerProps","ContentProps","TransitionComponent","Grow","transitionDuration","onEnter","onExited","TransitionProps","getRootProps","exited","setExited","React.useState","rootProps","useSlotProps","handleExited","node","handleEnter","isAppearing"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5]}