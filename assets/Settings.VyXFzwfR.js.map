{"version":3,"file":"Settings.VyXFzwfR.js","sources":["../../node_modules/@mui/icons-material/esm/Language.js","../../node_modules/@mui/icons-material/esm/Lock.js","../../node_modules/@mui/icons-material/esm/Notifications.js","../../node_modules/@mui/icons-material/esm/Receipt.js","../../src/pages/admin/Settings.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2m6.93 6h-2.95c-.32-1.25-.78-2.45-1.38-3.56 1.84.63 3.37 1.91 4.33 3.56M12 4.04c.83 1.2 1.48 2.53 1.91 3.96h-3.82c.43-1.43 1.08-2.76 1.91-3.96M4.26 14C4.1 13.36 4 12.69 4 12s.1-1.36.26-2h3.38c-.08.66-.14 1.32-.14 2 0 .68.06 1.34.14 2zm.82 2h2.95c.32 1.25.78 2.45 1.38 3.56-1.84-.63-3.37-1.9-4.33-3.56m2.95-8H5.08c.96-1.66 2.49-2.93 4.33-3.56C8.81 5.55 8.35 6.75 8.03 8M12 19.96c-.83-1.2-1.48-2.53-1.91-3.96h3.82c-.43 1.43-1.08 2.76-1.91 3.96M14.34 14H9.66c-.09-.66-.16-1.32-.16-2 0-.68.07-1.35.16-2h4.68c.09.65.16 1.32.16 2 0 .68-.07 1.34-.16 2m.25 5.56c.6-1.11 1.06-2.31 1.38-3.56h2.95c-.96 1.65-2.49 2.93-4.33 3.56M16.36 14c.08-.66.14-1.32.14-2 0-.68-.06-1.34-.14-2h3.38c.16.64.26 1.31.26 2s-.1 1.36-.26 2z\"\n}), 'Language');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1z\"\n}), 'Lock');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.89 2 2 2m6-6v-5c0-3.07-1.64-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.63 5.36 6 7.92 6 11v5l-2 2v1h16v-1z\"\n}), 'Notifications');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 17H6v-2h12zm0-4H6v-2h12zm0-4H6V7h12zM3 22l1.5-1.5L6 22l1.5-1.5L9 22l1.5-1.5L12 22l1.5-1.5L15 22l1.5-1.5L18 22l1.5-1.5L21 22V2l-1.5 1.5L18 2l-1.5 1.5L15 2l-1.5 1.5L12 2l-1.5 1.5L9 2 7.5 3.5 6 2 4.5 3.5 3 2z\"\n}), 'Receipt');","import React, { useEffect, useState, useCallback } from 'react';\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  Grid,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Tabs,\n  Tab,\n  Snackbar,\n  CircularProgress,\n  FormHelperText,\n  Alert\n} from '@mui/material';\nimport type { SelectChangeEvent } from '@mui/material/Select';\nimport { Settings as SettingsIcon, Email, Lock, Language, Notifications, Receipt } from '@mui/icons-material';\n\nimport api from '../../services/api';\nimport { SettingsFormData } from '../../types/settings';\n\n/* ---------------- Tab panel ---------------- */\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: string;\n  value: string;\n}\nconst TabPanel: React.FC<TabPanelProps> = ({ children, value, index, ...other }) => (\n  <div\n    role=\"tabpanel\"\n    hidden={value !== index}\n    id={`settings-tabpanel-${index}`}\n    aria-labelledby={`settings-tab-${index}`}\n    {...other}\n  >\n    {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\n  </div>\n);\n\n/* ---------------- Utils ---------------- */\nconst EMAIL_RE = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n/* ---------------- Component ---------------- */\nconst Settings: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<string>('general');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isSaving, setIsSaving] = useState<boolean>(false);\n  const [errorText, setErrorText] = useState<string>('');\n\n  const [snackbar, setSnackbar] = useState<{\n    open: boolean;\n    message: string;\n    severity: 'success' | 'error' | 'info' | 'warning';\n  }>({ open: false, message: '', severity: 'success' });\n\n  // Safe defaults\n  const [formData, setFormData] = useState<SettingsFormData>({\n    siteTitle: '28° West',\n    siteDescription: 'Adventure Tours & Travel',\n    contactEmail: 'info@28degreeswest.com',\n    contactPhone: '',\n    address: '',\n    socialMedia: {\n      facebook: '',\n      twitter: '',\n      instagram: '',\n      linkedin: '',\n      youtube: '',\n    },\n    seo: {\n      metaTitle: '',\n      metaDescription: '',\n      metaKeywords: '',\n    },\n    maintenanceMode: false,\n    allowRegistrations: true,\n    defaultUserRole: 'user',\n    currency: 'USD',\n    timezone: 'UTC',\n    dateFormat: 'MM/DD/YYYY',\n    timeFormat: '12h',\n    itemsPerPage: 10,\n    enableAnalytics: false,\n    googleAnalyticsId: '',\n    enableEmailNotifications: true,\n    emailSender: 'noreply@28degreeswest.com',\n  });\n\n  const showSnack = (message: string, severity: 'success' | 'error' | 'info' | 'warning' = 'success') =>\n    setSnackbar({ open: true, message, severity });\n\n  /* -------- nested setter -------- */\n  const setNestedValue = useCallback(\n    <K extends keyof SettingsFormData>(parent: K, child: string, value: any) => {\n      setFormData((prev) => ({\n        ...prev,\n        [parent]: {\n          ...(prev[parent] as Record<string, any>),\n          [child]: value,\n        } as any,\n      }));\n    },\n    []\n  );\n\n  /* -------- load settings -------- */\n  const loadSettings = useCallback(async () => {\n    setIsLoading(true);\n    setErrorText('');\n    try {\n      // Primary (admin) endpoint\n      const res = await api.get<{ data: SettingsFormData } | SettingsFormData>('/api/v1/admin/settings');\n      const data = (res.data as any).data ?? res.data;\n      setFormData((prev) => ({ ...prev, ...(data as SettingsFormData) }));\n    } catch (err: any) {\n      // Optional public read-only fallback\n      if (err?.response?.status === 404) {\n        try {\n          const pub = await api.get<{ data: Partial<SettingsFormData> } | Partial<SettingsFormData>>('/api/v1/settings');\n          const data = (pub.data as any).data ?? pub.data;\n          setFormData((prev) => ({ ...prev, ...(data as Partial<SettingsFormData>) }));\n        } catch (e: any) {\n          setErrorText(e?.response?.data?.message || 'Failed to load settings');\n          showSnack('Failed to load settings', 'error');\n        }\n      } else {\n        setErrorText(err?.response?.data?.message || 'Failed to load settings');\n        showSnack('Failed to load settings', 'error');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadSettings();\n  }, [loadSettings]);\n\n  /* -------- handlers -------- */\n  const handleTabChange = (_event: React.SyntheticEvent, newValue: string) => setActiveTab(newValue);\n\n  const handleTextChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const target = e.target as HTMLInputElement;\n    const { name, value, type, checked } = target;\n\n    if (name.includes('.')) {\n      const [parent, child] = name.split('.');\n      setNestedValue(parent as keyof SettingsFormData, child, type === 'checkbox' ? checked : value);\n    } else {\n      setFormData((prev) => ({\n        ...prev,\n        [name]: type === 'checkbox' ? checked : value,\n      }) as SettingsFormData);\n    }\n  };\n\n  const handleSelectChange = (e: SelectChangeEvent<string>) => {\n    const { name, value } = e.target;\n    if (!name) return;\n\n    if (name.includes('.')) {\n      const [parent, child] = name.split('.');\n      setNestedValue(parent as keyof SettingsFormData, child, value);\n      return;\n    }\n\n    setFormData((prev) => ({\n      ...prev,\n      [name]: name === 'itemsPerPage' ? Number(value) : value,\n    }) as SettingsFormData);\n  };\n\n  const handleSwitchChange =\n    (name: string) =>\n    (_e: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n      if (name.includes('.')) {\n        const [parent, child] = name.split('.');\n        setNestedValue(parent as keyof SettingsFormData, child, checked);\n      } else {\n        setFormData((prev) => ({ ...prev, [name]: checked }) as SettingsFormData);\n      }\n    };\n\n  /* -------- validate & save -------- */\n  const validate = (): string | null => {\n    if (!formData.siteTitle.trim()) return 'Site title is required.';\n    if (!EMAIL_RE.test(formData.contactEmail)) return 'Please provide a valid contact email.';\n    if (formData.enableAnalytics && !formData.googleAnalyticsId.trim()) {\n      return 'Google Analytics is enabled—please provide a Tracking ID.';\n    }\n    if (formData.enableEmailNotifications && !EMAIL_RE.test(formData.emailSender)) {\n      return 'Please provide a valid email sender address.';\n    }\n    if (!Number.isFinite(formData.itemsPerPage) || formData.itemsPerPage < 1) {\n      return 'Items per page must be at least 1.';\n    }\n    return null;\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const err = validate();\n    if (err) {\n      showSnack(err, 'error');\n      return;\n    }\n\n    setIsSaving(true);\n    try {\n      const res = await api.put('/api/v1/admin/settings', formData);\n      if (res.status >= 200 && res.status < 300) {\n        showSnack('Settings saved successfully', 'success');\n        await loadSettings(); // reflect any server normalization\n      } else {\n        showSnack('Failed to save settings', 'error');\n      }\n    } catch (error: any) {\n      const message = error?.response?.data?.message || 'Failed to save settings';\n      showSnack(message, 'error');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  /* -------- render -------- */\n  const renderTabContent = () => {\n    if (isLoading) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"300px\">\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          aria-label=\"settings tabs\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          sx={{ mb: 3 }}\n        >\n          <Tab icon={<SettingsIcon />} label=\"General\" value=\"general\" />\n          <Tab icon={<Language />} label=\"Appearance\" value=\"appearance\" />\n          <Tab icon={<Email />} label=\"Email\" value=\"email\" />\n          <Tab icon={<Lock />} label=\"Security\" value=\"security\" />\n          <Tab icon={<Notifications />} label=\"Notifications\" value=\"notifications\" />\n          <Tab icon={<Receipt />} label=\"Billing\" value=\"billing\" />\n        </Tabs>\n\n        {/* GENERAL */}\n        <TabPanel value={activeTab} index=\"general\">\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Site Title\"\n                name=\"siteTitle\"\n                value={formData.siteTitle}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n                required\n              />\n              <TextField\n                fullWidth\n                multiline\n                rows={3}\n                label=\"Site Description\"\n                name=\"siteDescription\"\n                value={formData.siteDescription}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                fullWidth\n                label=\"Contact Email\"\n                name=\"contactEmail\"\n                type=\"email\"\n                value={formData.contactEmail}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n                required\n                error={!!formData.contactEmail && !EMAIL_RE.test(formData.contactEmail)}\n                helperText={\n                  !!formData.contactEmail && !EMAIL_RE.test(formData.contactEmail)\n                    ? 'Invalid email address'\n                    : ' '\n                }\n              />\n              <TextField\n                fullWidth\n                label=\"Contact Phone\"\n                name=\"contactPhone\"\n                value={formData.contactPhone}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                fullWidth\n                label=\"Address\"\n                name=\"address\"\n                value={formData.address}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"currency-label\">Currency</InputLabel>\n                <Select\n                  labelId=\"currency-label\"\n                  id=\"currency\"\n                  name=\"currency\"\n                  value={formData.currency}\n                  onChange={handleSelectChange}\n                  label=\"Currency\"\n                >\n                    <MenuItem value=\"USD\">USD ($)</MenuItem>\n                    <MenuItem value=\"EUR\">EUR (€)</MenuItem>\n                    <MenuItem value=\"GBP\">GBP (£)</MenuItem>\n                    <MenuItem value=\"CAD\">CAD (C$)</MenuItem>\n                    <MenuItem value=\"AUD\">AUD (A$)</MenuItem>\n                    <MenuItem value=\"JMD\">JMD (J$)</MenuItem>\n                </Select>\n              </FormControl>\n\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"timezone-label\">Timezone</InputLabel>\n                <Select\n                  labelId=\"timezone-label\"\n                  id=\"timezone\"\n                  name=\"timezone\"\n                  value={formData.timezone}\n                  onChange={handleSelectChange}\n                  label=\"Timezone\"\n                >\n                  <MenuItem value=\"UTC\">UTC</MenuItem>\n                  <MenuItem value=\"America/New_York\">Eastern Time (ET)</MenuItem>\n                  <MenuItem value=\"America/Chicago\">Central Time (CT)</MenuItem>\n                  <MenuItem value=\"America/Denver\">Mountain Time (MT)</MenuItem>\n                  <MenuItem value=\"America/Los_Angeles\">Pacific Time (PT)</MenuItem>\n                  <MenuItem value=\"America/Jamaica\">America/Jamaica</MenuItem>\n                </Select>\n              </FormControl>\n\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formData.maintenanceMode}\n                    onChange={handleSwitchChange('maintenanceMode')}\n                    name=\"maintenanceMode\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Maintenance Mode\"\n                sx={{ mt: 2, display: 'block' }}\n              />\n              <FormHelperText>When enabled, only administrators can access the site.</FormHelperText>\n\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formData.allowRegistrations}\n                    onChange={handleSwitchChange('allowRegistrations')}\n                    name=\"allowRegistrations\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Allow New User Registrations\"\n                sx={{ mt: 2, display: 'block' }}\n              />\n            </Grid>\n\n            {/* Social links */}\n            <Grid item xs={12}>\n              <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Social Media</Typography>\n              <Grid container spacing={2}>\n                {(['facebook', 'twitter', 'instagram', 'linkedin', 'youtube'] as const).map((key) => (\n                  <Grid item xs={12} md={6} key={key}>\n                    <TextField\n                      fullWidth\n                      label={key[0].toUpperCase() + key.slice(1)}\n                      name={`socialMedia.${key}`}\n                      value={(formData.socialMedia as any)[key] || ''}\n                      onChange={handleTextChange}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        {/* APPEARANCE */}\n        <TabPanel value={activeTab} index=\"appearance\">\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"date-format-label\">Date Format</InputLabel>\n                <Select\n                  labelId=\"date-format-label\"\n                  id=\"dateFormat\"\n                  name=\"dateFormat\"\n                  value={formData.dateFormat}\n                  onChange={handleSelectChange}\n                  label=\"Date Format\"\n                >\n                  <MenuItem value=\"MM/DD/YYYY\">MM/DD/YYYY</MenuItem>\n                  <MenuItem value=\"DD/MM/YYYY\">DD/MM/YYYY</MenuItem>\n                  <MenuItem value=\"YYYY-MM-DD\">YYYY-MM-DD</MenuItem>\n                </Select>\n              </FormControl>\n\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"time-format-label\">Time Format</InputLabel>\n                <Select\n                  labelId=\"time-format-label\"\n                  id=\"timeFormat\"\n                  name=\"timeFormat\"\n                  value={formData.timeFormat}\n                  onChange={handleSelectChange}\n                  label=\"Time Format\"\n                >\n                  <MenuItem value=\"12h\">12-hour (2:30 PM)</MenuItem>\n                  <MenuItem value=\"24h\">24-hour (14:30)</MenuItem>\n                </Select>\n              </FormControl>\n\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"items-per-page-label\">Items Per Page</InputLabel>\n                <Select\n                  labelId=\"items-per-page-label\"\n                  id=\"itemsPerPage\"\n                  name=\"itemsPerPage\"\n                  value={String(formData.itemsPerPage)}\n                  onChange={handleSelectChange}\n                  label=\"Items Per Page\"\n                >\n                  <MenuItem value=\"5\">5</MenuItem>\n                  <MenuItem value=\"10\">10</MenuItem>\n                  <MenuItem value=\"25\">25</MenuItem>\n                  <MenuItem value=\"50\">50</MenuItem>\n                  <MenuItem value=\"100\">100</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n\n            {/* SEO */}\n            <Grid item xs={12} md={6}>\n              <Typography variant=\"subtitle1\">SEO</Typography>\n              <TextField\n                fullWidth\n                label=\"Meta Title\"\n                name=\"seo.metaTitle\"\n                value={formData.seo.metaTitle}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                fullWidth\n                multiline\n                rows={3}\n                label=\"Meta Description\"\n                name=\"seo.metaDescription\"\n                value={formData.seo.metaDescription}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n              <TextField\n                fullWidth\n                label=\"Meta Keywords (comma separated)\"\n                name=\"seo.metaKeywords\"\n                value={formData.seo.metaKeywords}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n              />\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        {/* EMAIL */}\n        <TabPanel value={activeTab} index=\"email\">\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formData.enableEmailNotifications}\n                    onChange={handleSwitchChange('enableEmailNotifications')}\n                    name=\"enableEmailNotifications\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Enable Email Notifications\"\n                sx={{ mb: 2, display: 'block' }}\n              />\n\n              <TextField\n                fullWidth\n                label=\"Email Sender Address\"\n                name=\"emailSender\"\n                type=\"email\"\n                value={formData.emailSender}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n                error={!!formData.emailSender && !EMAIL_RE.test(formData.emailSender)}\n                helperText={\n                  !!formData.emailSender && !EMAIL_RE.test(formData.emailSender)\n                    ? 'Invalid email address'\n                    : 'This email will be used as the From address for system emails.'\n                }\n              />\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        {/* SECURITY */}\n        <TabPanel value={activeTab} index=\"security\">\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth margin=\"normal\">\n                <InputLabel id=\"default-role-label\">Default User Role</InputLabel>\n                <Select\n                  labelId=\"default-role-label\"\n                  id=\"defaultUserRole\"\n                  name=\"defaultUserRole\"\n                  value={formData.defaultUserRole}\n                  onChange={handleSelectChange}\n                  label=\"Default User Role\"\n                >\n                  <MenuItem value=\"user\">User</MenuItem>\n                  <MenuItem value=\"guide\">Guide</MenuItem>\n                  <MenuItem value=\"admin\">Administrator</MenuItem>\n                </Select>\n                <FormHelperText>This role is assigned to new users when they register.</FormHelperText>\n              </FormControl>\n\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={formData.enableAnalytics}\n                    onChange={handleSwitchChange('enableAnalytics')}\n                    name=\"enableAnalytics\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Enable Google Analytics\"\n                sx={{ mt: 2, display: 'block' }}\n              />\n\n              <TextField\n                fullWidth\n                label=\"Google Analytics ID\"\n                name=\"googleAnalyticsId\"\n                value={formData.googleAnalyticsId}\n                onChange={handleTextChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n                disabled={!formData.enableAnalytics}\n                helperText=\"Enter your GA4 Tracking ID (e.g., G-XXXXXXXXXX)\"\n              />\n            </Grid>\n          </Grid>\n        </TabPanel>\n\n        {/* NOTIFICATIONS */}\n        <TabPanel value={activeTab} index=\"notifications\">\n          <Alert severity=\"info\">Granular notification preferences can be managed here.</Alert>\n        </TabPanel>\n\n        {/* BILLING */}\n        <TabPanel value={activeTab} index=\"billing\">\n          <Alert severity=\"info\">Billing & payment related settings can be managed here.</Alert>\n        </TabPanel>\n\n        <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end' }}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            disabled={isSaving}\n            startIcon={isSaving ? <CircularProgress size={20} /> : null}\n          >\n            {isSaving ? 'Saving...' : 'Save Changes'}\n          </Button>\n        </Box>\n      </form>\n    );\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Settings\n      </Typography>\n\n      {errorText ? (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {errorText}\n        </Alert>\n      ) : (\n        <Alert severity=\"info\" sx={{ mb: 3 }}>\n          Configure your website settings and preferences here.\n        </Alert>\n      )}\n\n      {renderTabContent()}\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar((prev) => ({ ...prev, open: false }))}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <Alert\n          onClose={() => setSnackbar((prev) => ({ ...prev, open: false }))}\n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default Settings;\n"],"names":["Language","createSvgIcon","_jsx","Lock","Notifications","Receipt","TabPanel","children","value","index","other","jsx","Box","EMAIL_RE","Settings","activeTab","setActiveTab","useState","isLoading","setIsLoading","isSaving","setIsSaving","errorText","setErrorText","snackbar","setSnackbar","formData","setFormData","showSnack","message","severity","setNestedValue","useCallback","parent","child","prev","loadSettings","res","api","data","err","_a","pub","e","_c","_b","_e","_d","useEffect","handleTabChange","_event","newValue","handleTextChange","target","name","type","checked","handleSelectChange","handleSwitchChange","validate","handleSubmit","error","renderTabContent","CircularProgress","jsxs","Tabs","Tab","SettingsIcon","Email","Grid","TextField","FormControl","InputLabel","Select","MenuItem","FormControlLabel","Switch","FormHelperText","Typography","key","Alert","Button","Snackbar"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}