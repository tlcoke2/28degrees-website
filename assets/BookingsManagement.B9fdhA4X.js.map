{"version":3,"file":"BookingsManagement.B9fdhA4X.js","sources":["../../src/pages/admin/BookingsManagement.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box, Button, CircularProgress, Dialog, DialogActions, DialogContent,\n  DialogTitle, Grid, TextField, Select, MenuItem, FormControl,\n  InputLabel, Snackbar, Alert, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, IconButton, Paper\n} from '@mui/material';\nimport { SelectChangeEvent } from '@mui/material/Select';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { Booking } from '../../types/booking';\n\n// Form data is the Booking minus system-managed fields\ntype BookingFormData = Omit<Booking, 'id' | 'createdAt' | 'updatedAt'>;\n\ntype SnackbarState = {\n  open: boolean;\n  message: string;\n  severity: 'success' | 'error' | 'info' | 'warning';\n};\n\n// Minimal status union (ensure it matches your backend/Booking type)\ntype BookingStatus = 'pending' | 'confirmed' | 'cancelled' | 'completed';\n\n// Custom GridItem helper\nconst GridItem: React.FC<React.ComponentProps<typeof Grid>> = ({ children, ...props }) => (\n  <Grid item {...props}>\n    {children}\n  </Grid>\n);\n\n// Helper to coerce values by field name (numbers vs strings)\nfunction coerceValue(name: string, value: unknown) {\n  if (name === 'participants') {\n    const n = parseInt(String(value), 10);\n    return Number.isFinite(n) && n > 0 ? n : 1;\n  }\n  if (name === 'status') return (String(value) as BookingStatus);\n  return value;\n}\n\nconst emptyForm: BookingFormData = {\n  tourId: '',\n  userId: '',\n  date: '',\n  participants: 1,\n  status: 'pending',\n  specialRequests: '',\n};\n\nconst BookingsManagement: React.FC = () => {\n  const [bookings] = useState<Booking[]>([]); // TODO: fetch from API\n  const [open, setOpen] = useState(false);\n  const [currentBooking, setCurrentBooking] = useState<Partial<BookingFormData>>(emptyForm);\n  const [isEditing, setIsEditing] = useState(false);\n  const [loading] = useState(false);\n  const [snackbar, setSnackbar] = useState<SnackbarState>({\n    open: false,\n    message: '',\n    severity: 'success',\n  });\n\n  // Unified change handler for TextField and Select\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | SelectChangeEvent<string>\n  ) => {\n    const target = e.target as HTMLInputElement;\n    const { name } = target;\n    const value = (e as SelectChangeEvent<string>).target?.value ?? target.value;\n\n    if (!name) return;\n    setCurrentBooking(prev => ({\n      ...prev,\n      [name]: coerceValue(name, value),\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!currentBooking.tourId?.trim()) {\n      return setSnackbar({ open: true, message: 'Tour ID is required.', severity: 'error' });\n    }\n    if (!currentBooking.userId?.trim()) {\n      return setSnackbar({ open: true, message: 'User ID is required.', severity: 'error' });\n    }\n    if (!currentBooking.date) {\n      return setSnackbar({ open: true, message: 'Date is required.', severity: 'error' });\n    }\n\n    // TODO: call create/update API\n    console.log(isEditing ? 'Updating booking:' : 'Creating booking:', currentBooking);\n\n    setOpen(false);\n    setSnackbar({\n      open: true,\n      message: isEditing ? 'Booking updated.' : 'Booking created.',\n      severity: 'success',\n    });\n  };\n\n  const handleDelete = (id: string) => {\n    if (window.confirm('Are you sure you want to delete this booking?')) {\n      // TODO: call delete API\n      console.log('Delete booking:', id);\n      setSnackbar({ open: true, message: 'Booking deleted.', severity: 'success' });\n    }\n  };\n\n  const mapBookingToForm = (b: Booking): BookingFormData => ({\n    tourId: b.tourId,\n    userId: b.userId,\n    date: b.date,\n    participants: b.participants,\n    status: b.status as BookingStatus,\n    specialRequests: b.specialRequests ?? '',\n  });\n\n  const handleEdit = (booking: Booking) => {\n    setCurrentBooking(mapBookingToForm(booking));\n    setIsEditing(true);\n    setOpen(true);\n  };\n\n  return (\n    <Box p={3}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <h2>Bookings Management</h2>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<AddIcon />}\n          onClick={() => {\n            setCurrentBooking(emptyForm);\n            setIsEditing(false);\n            setOpen(true);\n          }}\n        >\n          Add Booking\n        </Button>\n      </Box>\n\n      {/* Bookings Table */}\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Tour ID</TableCell>\n              <TableCell>User ID</TableCell>\n              <TableCell>Date</TableCell>\n              <TableCell align=\"right\">Participants</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell width={120}>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {bookings.length > 0 ? (\n              bookings.map((booking) => (\n                <TableRow key={booking.id}>\n                  <TableCell>{booking.tourId}</TableCell>\n                  <TableCell>{booking.userId}</TableCell>\n                  <TableCell>\n                    {booking.date\n                      ? new Date(booking.date).toLocaleDateString()\n                      : ''}\n                  </TableCell>\n                  <TableCell align=\"right\">{booking.participants}</TableCell>\n                  <TableCell sx={{ textTransform: 'capitalize' }}>{booking.status}</TableCell>\n                  <TableCell>\n                    <IconButton onClick={() => handleEdit(booking)} aria-label=\"edit\">\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton\n                      onClick={() => booking.id && handleDelete(booking.id)}\n                      aria-label=\"delete\"\n                    >\n                      <DeleteIcon color=\"error\" />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={6} align=\"center\">\n                  No bookings found\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Add/Edit Booking Dialog */}\n      <Dialog open={open} onClose={() => setOpen(false)} maxWidth=\"md\" fullWidth>\n        <form onSubmit={handleSubmit} noValidate>\n          <DialogTitle>{isEditing ? 'Edit Booking' : 'Add New Booking'}</DialogTitle>\n          <DialogContent>\n            <Grid container spacing={2} sx={{ mt: 1 }}>\n              <GridItem xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Tour ID\"\n                  name=\"tourId\"\n                  value={currentBooking.tourId || ''}\n                  onChange={handleChange}\n                  required\n                  margin=\"normal\"\n                />\n              </GridItem>\n\n              <GridItem xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"User ID\"\n                  name=\"userId\"\n                  value={currentBooking.userId || ''}\n                  onChange={handleChange}\n                  required\n                  margin=\"normal\"\n                />\n              </GridItem>\n\n              <GridItem xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Date\"\n                  name=\"date\"\n                  type=\"date\"\n                  value={currentBooking.date || ''}\n                  onChange={handleChange}\n                  required\n                  margin=\"normal\"\n                  InputLabelProps={{ shrink: true }}\n                />\n              </GridItem>\n\n              <GridItem xs={12} md={6}>\n                <TextField\n                  fullWidth\n                  label=\"Participants\"\n                  name=\"participants\"\n                  type=\"number\"\n                  value={currentBooking.participants ?? 1}\n                  onChange={handleChange}\n                  required\n                  margin=\"normal\"\n                  inputProps={{ min: 1 }}  // âœ… correct prop (was InputProps.inputProps)\n                />\n              </GridItem>\n\n              <GridItem xs={12} md={6}>\n                <FormControl fullWidth margin=\"normal\">\n                  <InputLabel id=\"status-label\">Status</InputLabel>\n                  <Select\n                    labelId=\"status-label\"\n                    name=\"status\"\n                    value={(currentBooking.status as BookingStatus) || 'pending'}\n                    onChange={handleChange}\n                    label=\"Status\"\n                    required\n                  >\n                    <MenuItem value=\"pending\">Pending</MenuItem>\n                    <MenuItem value=\"confirmed\">Confirmed</MenuItem>\n                    <MenuItem value=\"cancelled\">Cancelled</MenuItem>\n                    <MenuItem value=\"completed\">Completed</MenuItem>\n                  </Select>\n                </FormControl>\n              </GridItem>\n\n              <GridItem xs={12}>\n                <TextField\n                  fullWidth\n                  label=\"Special Requests\"\n                  name=\"specialRequests\"\n                  value={currentBooking.specialRequests || ''}\n                  onChange={handleChange}\n                  multiline\n                  rows={4}\n                  margin=\"normal\"\n                />\n              </GridItem>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpen(false)} color=\"inherit\">\n              Cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={loading}\n              startIcon={loading ? <CircularProgress size={20} /> : undefined}\n            >\n              {isEditing ? 'Update' : 'Create'} Booking\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\n      >\n        <Alert\n          onClose={() => setSnackbar(prev => ({ ...prev, open: false }))}\n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};\n\nexport default BookingsManagement;\n\n"],"names":["GridItem","children","props","jsx","Grid","coerceValue","name","value","emptyForm","BookingsManagement","bookings","useState","open","setOpen","currentBooking","setCurrentBooking","isEditing","setIsEditing","loading","snackbar","setSnackbar","handleChange","e","target","_a","prev","handleSubmit","_b","handleDelete","id","mapBookingToForm","b","handleEdit","booking","jsxs","Box","Button","AddIcon","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","IconButton","EditIcon","DeleteIcon","Dialog","DialogTitle","DialogContent","TextField","FormControl","InputLabel","Select","MenuItem","DialogActions","CircularProgress","Snackbar","Alert"],"mappings":"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"}